use Test;
use CustomImporting;

use lib './t';

my &asdf = from-import-rt("testimporting", <&asdf1>);
is asdf(), "our asdf1";

my (&asdf1, &asdf2, &asdf3, &asdf4, &asdf5) := from-import-rt("testimporting", <&asdf1 &asdf2 &testimporting::asdf3 &testimporting::asdf4 &asdf5>);

is &asdf1.package.^name, "testimporting";
is &asdf2.package.^name, "testimporting";
is &asdf3.package.^name, "testimporting";
is &asdf4.package.^name, "testimporting";
is &asdf5.package.^name, "testimporting";
is asdf1(), "our asdf1";
is asdf2(), "exported asdf2";
is asdf3(), "our testimporting::asdf3";
is asdf4(), "exported testimporting::asdf4";
is asdf5(), "our exported asdf5";

my ($class1, $class2, $class3, \class4, \class5, $v1 is rw, $v2 is rw) := from-import-rt("testimporting", <class1 class2 class3 class4 class5 $v1 $v2>);

is $class1.new.gist, "testimporting::class1.new";
is $class2.new.gist, "testimporting::testimporting::class2.new";
is $class3.new.gist, "testimporting::class3.new";
is class4.new.gist, "testimporting::testimporting::class4.new";
is class5.new.gist, "testimporting::class5.new";

is $v1, 42;
is $v2, 1024;

$v1 = 43;
$v2 = 1025;
my ($vc1 is rw, $vc2) := from-import-rt("testimporting", ['$v1', '$v2']);
is $vc1, 43;
is $vc2, 1025;

my ($vb1 is rw) := from-import-rt("testimporting", ['$v1']);
is $vb1.VAR.name, '$v1';

my $resa = from-import-rt("testimporting", <$v1 $v2>);
my $va1 := $resa[0];
my $va2 := $resa[1];
is $va1, 43;
is $va2, 1025;

done-testing;
