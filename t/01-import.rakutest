use Test;
use CustomImporting;

use lib './t';
need testimporting;

my &asdf = from-import(testimporting, <&asdf1>);
is asdf(), "our asdf1";

my (&asdf1, &asdf2, &asdf3, &asdf4, &asdf5) := from-import(testimporting, <&asdf1 &asdf2 &testimporting::asdf3 &testimporting::asdf4 &asdf5>);

is &asdf1.package.^name, "testimporting";
is &asdf2.package.^name, "testimporting";
is &asdf3.package.^name, "testimporting";
is &asdf4.package.^name, "testimporting";
is &asdf5.package.^name, "testimporting";
is asdf1(), "our asdf1";
is asdf2(), "exported asdf2";
is asdf3(), "our testimporting::asdf3";
is asdf4(), "exported testimporting::asdf4";
is asdf5(), "our exported asdf5";

my ($class1, $class2, $class3, \class4, \class5, $v1 is rw, $v2 is rw) := from-import(testimporting, <class1 class2 class3 class4 class5 $v1 $v2>);

is $class1.new.gist, "testimporting::class1.new";
is $class2.new.gist, "testimporting::testimporting::class2.new";
is $class3.new.gist, "testimporting::class3.new";
is class4.new.gist, "testimporting::testimporting::class4.new";
is class5.new.gist, "testimporting::class5.new";

is $v1.WHERE, testimporting::<$v1>.WHERE;
is $v2.WHERE, testimporting::<$v2>.WHERE;
$v1 = 43;
$v2 = 1025;
is $v1.WHERE, testimporting::<$v1>.WHERE;
is $v2.WHERE, testimporting::<$v2>.WHERE;
is $v1, testimporting::<$v1>;
is $v2, testimporting::<$v2>;

my ($vb1 is rw) := from-import(testimporting, ['$v1']);
is $vb1.VAR.name, '$v1';
$vb1 = 44;
is $vb1.WHERE, testimporting::<$v1>.WHERE;

my $resa = from-import(testimporting, <$v1 $v2>);
my $va1 := $resa[0];
my $va2 := $resa[1];
# is ok, too:
# my @resa := from-import(testimporting, <$v1 $v2>);
# my $va1 := @resa[0];
# my $va2 := @resa[1];
is $va1.WHERE, testimporting::<$v1>.WHERE;
is $va2.WHERE, testimporting::<$v2>.WHERE;
$va1 = 43;
$va2 = 1025;
is $va1.WHERE, testimporting::<$v1>.WHERE;
is $va2.WHERE, testimporting::<$v2>.WHERE;

my @arr := from-import(testimporting, <@arr>);
@arr.push(4);
is @arr, testimporting::<@arr>;

my $arr2 := from-import(testimporting, <$arr2>);
$arr2.push(4);
is $arr2, testimporting::<$arr2>;

done-testing;
